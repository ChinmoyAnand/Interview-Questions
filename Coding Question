1. Remove duplicate from Integer Array using Java8


2. Find the Median of 2 sorted arrays
A={1, 3, 5, 7, 11, 15} where m = 6, B={2, 4, 8, 12, 14} where n = 5 and the median is 7
https://www.youtube.com/watch?v=LPFhl65R7ww

3. Write a program to find maximum profit which can be gained in provided week.
int shares = { 2, 4, 7, 3, 5}; E.g. share price on Monday it was 2/-, on Tuesday it was 4/-, 
and so on So my maximum profit would be 5/- , if I buy share on Monday and sell on Wednesday.

4. Longest Substring Without Repeating Characters
example : 1 Input: s = "abcabcbb" output = "abc" Example 2 : Input "fffff" output ="f"

5. Find the second largest word in String like "I am good programmer" >> "good"

6. Remove duplicate chars like "aabbccd" > "abcd"

7. Check if two words are Anagrams like "fired" and "fried"

8. Search an element in a sorted and rotated array

9. How to Find all Pairs in Array of Integers Whose sum is Equal to a Given Number.

10. write a program to remove adjacent duplicate characters from a string? 
ex: cnncbc output : bc

11. Given an array of sorted integers find the closest number based om user input
Example - Input :arr[] = {2, 5, 6, 7, 8, 8, 9}; Target number = 4 Output : 5

Target number = 3 Output : 2

A simple solution is to traverse through the given array and keep track of absolute difference of current element with every element. 
Finally return the element that has minimum absolution difference. An efficient solution is to use Binary Search.



12. Java 8 program to Count Strings whose length is greater than 3 in List
 List stringList = Arrays.asList("Hello","Interview",
"Questions","Answers","Ram","for");
        long count = stringList.stream().filter(str -> str.length() > 3).count();
        System.out.println("String count with greater than 3 digit : " + count);


13. Find Perfect nUmber
Perfect Number: A (positive integer) number is called a perfect number, if the sum of all of its factors, except the number itself, is equal to the number itself, then that number is called a perfect number.

For example, all the factors of number 6 are: 1, 2, 3, and 6. But, we have to remove 6 from that list; so if you add 1 + 2 + 3; you get 6! So, 6 is a perfect number.

Problem Statement: Write a program to find all perfect numbers between 1 and given number N.

Interesting tidbits: Check out this interesting relationship between Perfect Numbers and Mersenne Primes:

www.youtube.com/watch?v=T0xKHwQH-4I


14. Output array that contains multiplication of all other elements with o[N]

First you loop over entire input array and get a multiplication of all the numbers (remember: you have no 0's in the array). 
After that, you again go thru the entire array, this time divide the product of all with the specific number. In pseudo code:

product_of_all = 1
for i in input[N]:
   product_of_all *= input[i]

for i in input[N]:
    output[i] = product_of_all / input[i]


15. Write a function to find the longest common prefix string amongst an array of strings! Example 1 Input: strs = ["flower","flow","flight"] Output: "fl"

16. Given an array of sorted integers. We need to find the closest value to the given number. Array may contain duplicate values and negative numbers.

Example - Input :arr[] = {2, 5, 6, 7, 8, 8, 9}; Target number = 4 Output : 5

Target number = 3 Output : 2

==========================================================================================================
===============================    JAVA 8 Problems  ======================================================
==========================================================================================================

1. Find the sum of all even present in the List of Integer using Stream APIs and without using sum method?
2. Increment salary by 10% then return the list of employees with a salary greater than 10000?
3. Write a program to print the first non-repeating character in the given string using java8?
4. How to find duplicate elements in a given integers list in java using Stream functions?
5. Find the minimum value from the list of Integer using stream APIs and without using the min method on Stream
Find the minimum value from the list of Integer using stream APIs and without using the min method on Stream

list.stream().reduce((a,b) -> a < b)

6. 







